#!/usr/bin/env python
"""
    %prog [options] n1 n2 n3 n4 n5 ...
"""
from __future__ import print_function


import os
import sys
from numpy import array, zeros
import fitsio
import sersic_gmix

from sersic_gmix.fitting import get_fname, read_fit
from sersic_gmix.spline_fitting import fit_spline

import esutil as eu

import pickle

from optparse import OptionParser

parser=OptionParser(__doc__)
parser.add_option('--ngauss',default=None,help="number of gaussians, required")
parser.add_option('--order',default=None,help="order of spline, required")

def get_pars(nvals, ngauss):
    plist=[read_fit(n,ngauss) for n in nvals]

    ndata=len(plist)

    pars=zeros( (ndata, 2*ngauss) )

    for i in xrange(ndata):
        pars[i, :] = plist[i]

    return pars

def get_options(options):
    if options.ngauss is None:
        raise ValueError("send --ngauss")
    if options.order is None:
        raise ValueError("send --order")

    order=int(options.order)
    ngauss=int(options.ngauss)

    return ngauss, order
def main():

    options, nvals = parser.parse_args(sys.argv[1:])
    if len(nvals) < 1:
        parser.print_help()
        sys.exit(45)

    ngauss, order = get_options(options)

    nvals=[float(n) for n in nvals]
    nvals=array(nvals)

    pars = get_pars(nvals, ngauss)


    fit_spline(pars[:,0:ngauss], nvals, 'T', order=order)
    fit_spline(pars[:,ngauss:],  nvals, 'flux', order=order)

    fitsname=sersic_gmix.fitting.get_combined_fname(ngauss)
    print(fitsname)
    fitsio.write(fitsname, pars, clobber=True)

main()
