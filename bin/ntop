#!/usr/bin/env python
"""
    %prog [options]

monitor network traffic of the interfaces
listed in /proc/net/dev
"""

import sys
from sys import stdout
import time
import terminal

from optparse import OptionParser

parser=OptionParser(__doc__)
parser.add_option("-r","--refresh",default=1, 
    help=("Refresh rate in seconds.  The data rate is "
          "averaged over this period. default is %default"))


class NTop(object):
    def __init__(self, refresh_rate=1):
        self.refresh_rate=refresh_rate
        self.nlines=0

    def run(self):
        stats_old=self.get_stats()

        while 1:
            stats=self.get_stats()

            diff_stats=self.get_diff_stats(stats_old, stats)
            self.print_stats(diff_stats)

            stats_old=stats
            time.sleep(self.refresh_rate)


    def print_stats(self, stats):
        if self.nlines > 0:
            self.clear()


        self.nlines=0

        l='%-10s  %12s %12s' % ('name','rec','trans')
        print l
        self.nlines+=1

        for interface in sorted(stats):
            rec_rate,rec_units=self.byte_diff_to_rate( stats[interface]['rec'] )
            trans_rate,trans_units=self.byte_diff_to_rate( stats[interface]['trans'] )


            l='%-10s  %8.2f %s %8.2f %s'
            print l % (interface, rec_rate, rec_units,trans_rate,trans_units)

            self.nlines += 1

    def byte_diff_to_rate(self, diff):
        byte_rate = diff/self.refresh_rate

        if byte_rate > 0.1*(1024*1024):
            return diff/(1024.*1024.)/self.refresh_rate, 'M/s'
        else:
            return diff/1024./self.refresh_rate, 'k/s'

    def clear(self):
        stdout.write(
            self.nlines * (terminal.UP + terminal.BOL + terminal.CLEAR_EOL)
        )


    def get_diff_stats(self, stats_old,stats):
        diff_stats={}
        for k in stats_old:
            o=stats_old[k]
            s=stats[k]
            diff_stats[k] = {'rec':s['rec'] - o['rec'],
                             'trans':s['trans']-o['trans']}

        return diff_stats

    def get_stats(self):
        lines=open('/proc/net/dev').readlines()

        lines=lines[2:]
        
        interfaces=[]

        stats={}
        for l in lines:
            ls0 = l.split(':')
            interface=ls0[0].strip()
            if interface != 'lo':
                lrest=ls0[1]

                lrest_split=lrest.split()
                rec_str=lrest_split[0]
                rec_bytecount=int(rec_str)

                trn_str=lrest_split[8]
                trn_bytecount=int(trn_str)

                stats[interface] = {'rec': rec_bytecount,
                                    'trans': trn_bytecount}

        return stats


def main():
    try:
        options, args = parser.parse_args(sys.argv[1:])

        refresh_rate=int(options.refresh)

        ntop=NTop(refresh_rate=refresh_rate)
        ntop.run()
    except KeyboardInterrupt:
        pass

main()
