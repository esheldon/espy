#!/usr/bin/env python
import sys
from sys import stderr
import yaml
import os
from argparse import ArgumentParser

import wq

parser=ArgumentParser(__doc__)
parser.add_argument('commands',help='commands to run, a valid shell line')

parser.add_argument('--extra',
                    help=('extra commands to run before the main command, '
                         'e.g. setting up environment'))

parser.add_argument('--repeat',type=int,default=1,
                    help='how many times to repeat the command when it is a one-liner, not a file')

parser.add_argument('--is-file',action='store_true',
                    help='commands is a file name, one command per line')

parser.add_argument('-p','--prefix',default='job',
                    help="prefix for file names and job names. Default is job-%%06d")
parser.add_argument('--from-cmd',action='store_true',
                  help=("assume the cmd is a single path and use basename for "
                        "wq names"))

_template="""
command: |
    {extra}
    {commands}

job_name: "{job_name}"
"""
class CmdConverter(object):
    def __init__(self, cmd, job_name, extra=None):
        """
        cmd must be all one line
        """
        self.cmd=cmd
        self.job_name=job_name

        if extra is None:
            self.extra=''
        else:
            self.extra=extra

        self.wq_script=self._cmd2yaml()

    def get_wq_script(self):
        return self.wq_script
    def _cmd2yaml(self):
        return _template.format(commands=self.cmd,
                                extra=self.extra,
                                job_name=self.job_name)

def get_job_name(prefix, i, name_fmt):
    job_name = name_fmt % (prefix,i)
    return job_name

def main():
    args=parser.parse_args()

    if args.is_file:
        command_file = args.commands
        commands = open(command_file).readlines()
    else:
        commands = [args.commands]*args.repeat

    name_fmt = '%s-%06d'
    for i,command in enumerate(commands):
        command=command.strip()

        job_name=get_job_name(args.prefix, i, name_fmt)
        fname = job_name+'.yaml'

        conv=CmdConverter(command,job_name,extra=args.extra)
        text=conv.get_wq_script() 

        print fname
        with open(fname,'w') as fobj:
            fobj.write(text)



main()
