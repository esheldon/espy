#!/usr/bin/env python
"""
    %prog [options] run gnum

combine outputs
"""

from __future__ import print_function

import os,sys
import fitsio
import esutil as eu

from great_des import files

from optparse import OptionParser
parser = OptionParser(__doc__)

def main():
    options, args = parser.parse_args(sys.argv[1:])
    if len(args) < 2:
        parser.print_help()
        sys.exit(45)

    run=args[0]
    gnum=int(args[1])

    conf=files.read_config(run=run)

    conf['gnum'] = gnum

    nper=conf['nper']

    d = files.get_collated_dir(**conf)
    if not os.path.exists(d):
        os.makedirs(d)
    collated_file = files.get_collated_file(**conf)
    collated_file=collated_file+'.test'
    print(collated_file)



    first=True
    with fitsio.FITS(collated_file,'rw',clobber=True) as fobj:
        for fnum in xrange(conf['nf']):
            conf['fnum'] = fnum

            truth_file=files.get_input_file(ftype='truth', **conf)
            print(truth_file)
            truth_data=fitsio.read(truth_file)

            low,high = files.get_chunk_ranges(**conf)
            n=len(low)

            dlist=[]
            for i in xrange(n):
                conf['start'] = low[i]
                conf['end'] = high[i]
                data0 = files.read_output(**conf)

                data=eu.numpy_util.add_fields(data0, [('shear_true','f8',2)])
                data['shear_true'][:,0] = truth_data['g1_true'][low[i]:high[i]+1]
                data['shear_true'][:,1] = truth_data['g2_true'][low[i]:high[i]+1]

                if data.size != nper:
                    err="data size mismatch: expected %d got %d"
                    raise IOError(err % (nper,data.size))


                if first:
                    fobj.write(data)
                    first=False
                else:
                    fobj[-1].append(data)

    print(collated_file)

main()
