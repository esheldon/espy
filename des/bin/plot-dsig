#!/usr/bin/env python
"""
plot dsig for the input run and binning scheme

Note jack also implies corr
"""
from __future__ import print_function
import os,sys
import des
import argparse

parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument("run", help="run identifier")
parser.add_argument("bin_scheme", help="bin scheme, e.g. bin-lgt05-zwide")
parser.add_argument("-t","--type", 
                    help="type to plot",
                    choices=['bin', 'corr', 'jack'],
                    default='bin')
parser.add_argument("-v","--visible",action='store_true',
                    help="show plot on screen")

parser.add_argument("--linear",action='store_true',
                    help="use linear y axis")

parser.add_argument("-y","--yrange",
                    default=None,
                    help="force y range")

  
def main():
    args = parser.parse_args()

    if args.type=='bin':
        data=des.files.read_binned(args.run,
                                          args.bin_scheme)

    yrange=args.yrange
    if yrange is not None:
        yrange=[float(v) for v in args.yrange.split(',')]

    binspec=des.files.read_config(args.bin_scheme)
    labels=[bi['label'] for bi in binspec['bin_info']]

    plt=des.plotting.plot_dsig(data['r'],
                               data['dsig'],
                               data['dsigerr'],
                               labels=labels,
                               ylog=(args.linear==False),
                               yrange=yrange,
                               visible=False)

    epsfile=des.files.get_binned_file(args.run,
                                             args.bin_scheme,
                                             ext='eps')
    print("writing:",epsfile)
    plt.write_eps(epsfile)

    if args.visible:
        plt.show()

main()
