# g1 g2 are g1o and g2o from Gary's paper
#
# s1 and s2 are shear.  Note they are coming
# in as negative since we evaluate at -shear


# usable in both C and python
A = 1 - g1*s1 - g2*s2
B = - g2*s1 + g1*s2
C = 1./(B*B + A*A)
C2 = C*C

g2ms2 = g2-s2
g1ms1 = g1-s1

D = (g2ms2*B + g1ms1*A)
E = s1*g2ms2 + g1ms1*s2
F = g1ms1*s1 - g2ms2*s2
G = (2*s2*B - 2*s1*A)
H = -(g1ms1*B) + g2ms2*A)
I = (-2*s1*B - 2*s2*A)

g1s_by_g1o =  -D*G*C2 -  ( A - F)*C

g1s_by_g2o =  -D*I*C2 -  ( B - E)*C

g2s_by_g1o =  -H*G*C2 -  (-B - E)*C

g2s_by_g2o =  -H*I*C2 -  ( A + F)*C


g1s_by_g1o_full = -((((g2 - s2)*(-(g2*s1) + g1*s2) + (g1 - s1)*(1 - g1*s1 - g2*s2))*(2*s2*(-(g2*s1) + g1*s2) - 2*s1*(1 - g1*s1 - g2*s2)))/((-(g2*s1) + g1*s2)**2 + (1 - g1*s1 - g2*s2)**2)**2) 
     -  (1 - g1*s1 - (g1 - s1)*s1 - g2*s2 + (g2 - s2)*s2)/((-(g2*s1) + g1*s2)**2 + (1 - g1*s1 - g2*s2)**2)

g1s_by_g2o_full = -((((g2 - s2)*(-(g2*s1) + g1*s2) + (g1 - s1)*(1 - g1*s1 - g2*s2))*(-2*s1*(-(g2*s1) + g1*s2) - 2*s2*(1 - g1*s1 - g2*s2)))/((-(g2*s1) + g1*s2)**2 + (1 - g1*s1 - g2*s2)**2)**2) 
     -  (-(g2*s1) - s1*(g2 - s2) + g1*s2 - (g1 - s1)*s2)/((-(g2*s1) + g1*s2)**2 + (1 - g1*s1 - g2*s2)**2)

g2s_by_g1o_full = -(((2*s2*(-(g2*s1) + g1*s2) - 2*s1*(1 - g1*s1 - g2*s2))*(-((g1 - s1)*(-(g2*s1) + g1*s2)) + (g2 - s2)*(1 - g1*s1 - g2*s2)))/((-(g2*s1) + g1*s2)**2 + (1 - g1*s1 - g2*s2)**2)**2) 
     -  (g2*s1 - s1*(g2 - s2) - g1*s2 - (g1 - s1)*s2)/((-(g2*s1) + g1*s2)**2 + (1 - g1*s1 - g2*s2)**2)

g2s_by_g2o_full =  -(((-((g1 - s1)*(-(g2*s1) + g1*s2)) + (g2 - s2)*(1 - g1*s1 - g2*s2))*(-2*s1*(-(g2*s1) + g1*s2) - 2*s2*(1 - g1*s1 - g2*s2)))/((-(g2*s1) + g1*s2)**2 + (1 - g1*s1 - g2*s2)**2)**2) 
     -  (1 - g1*s1 + (g1 - s1)*s1 - g2*s2 - (g2 - s2)*s2)/((-(g2*s1) + g1*s2)**2 + (1 - g1*s1 - g2*s2)**2)
