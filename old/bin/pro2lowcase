#!/usr/bin/env python
import sys
import re


idl_keywords = \
         ['FUNCTION ',
          'PRO ',
          ' NOT ',
          ' EQ ',
          ' NE ',
          ' LT ',
          ' LE ',
          ' GT ',
          ' GE ',
          ' AND ',
          ' OR ',
          ' XOR ',
          ' MOD ',
          'COMMON',
          'GOTO',
          'BREAK',
          'CONTINUE',
          'INHERITS',
          'ON_ERROR',
          'ON_IOERROR',
          'IF ',
          ' THEN ',
          ' ELSE',
          'CASE',
          ' OF',
          'SWITCH ',
          'FOR ',
          ' DO ',
          'WHILE',
          'REPEAT',
          'UNTIL',
          'BEGIN',
          'ENDIF',
          'ENDELSE',
          'ENDCASE',
          'ENDSWITCH',
          'ENDFOR',
          'ENDWHILE',
          'ENDREP',
          'END']



replist = []
def CreateReplist():
    for key in idl_keywords:
        replist.append( {'regex':  re.compile('.*'+key+'.*'),
                         'before': key.upper(),
                         'after':  key.lower()} )

def ToLower(instr):
    # make a copy which we will return
    newstr = instr
    for el in replist:
        if el['regex'].match(newstr):
            newstr = newstr.replace(el['before'],el['after'])

    return newstr


if __name__=="__main__":
    """
    This will convert all the keywords in an IDL .pro file to
    lower case.  I used to have these all converted to upper
    in my .emacs
    """
    # Prepare the regular expressions and replacement rules
    CreateReplist()

    if len(sys.argv) < 2:
        sys.stderr.write('-syntax: pro2lowcase filename\n')
        sys.exit(45)
    else:        
        filename = sys.argv[1]

        fobj = open(filename, "r")
        for line in fobj:
            newline = ToLower(line)
            # This prevents extra newline
            sys.stdout.write(newline)

        fobj.close()
    
